name: CI/CD & QualitÃ©

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: '18'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache backend modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: backend-${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
      - name: Cache frontend modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
      - name: Lint backend
        working-directory: backend
        run: npm run lint
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
      - name: Run backend tests
        working-directory: backend
        run: npm test
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
      - name: Run frontend tests
        working-directory: frontend
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build
  sonarcloud:
    name: Analyse SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java (pour sonar-scanner)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Sonar
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Lancer SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=KinoFiandry
            -Dsonar.projectKey=KinoFiandry_MissieMoustasWeb
            -Dsonar.sources=backend,frontend/src
            -Dsonar.tests=backend/__tests__,frontend/src
            -Dsonar.test.inclusions=**/*.test.js,**/*.spec.js
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info
            -Dsonar.branch.name=main
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      